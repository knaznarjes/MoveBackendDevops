
services:
  # Infrastructure Services
  mongodb:
    image: mongo:6.0
    container_name: move-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGO_INITDB_DATABASE: moveAuth
    volumes:
      - mongodb_data:/data/db
    networks:
      - move-network
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: move-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - move-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: move-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - move-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # Discovery Service (doit démarrer en premier)
  discovery:
    build:
      context: .
      dockerfile: /discovery/Dockerfile
    container_name: move-discovery
    restart: unless-stopped
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - move-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Auth Service
  auth-service:
    build:
      context: ./GatewayAuthServiceApplication
      dockerfile: Dockerfile
    container_name: move-auth
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/moveAuth?authSource=admin
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      mongodb:
        condition: service_healthy
      discovery:
        condition: service_healthy
    networks:
      - move-network

  # Content Service
  content-service:
    build:
      context: ./contentservice
      dockerfile: Dockerfile
    container_name: move-content
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/moveAuth?authSource=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    volumes:
      - content_uploads:/app/uploads
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      discovery:
        condition: service_healthy
    networks:
      - move-network

  # Search Service
  search-service:
    build:
      context: ./search-recommendation-service
      dockerfile: Dockerfile
    container_name: move-search
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/moveAuth?authSource=admin
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      mongodb:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      discovery:
        condition: service_healthy
    networks:
      - move-network

  # Community Service
  community-service:
    build:
      context: ./community-notification-service
      dockerfile: Dockerfile
    container_name: move-community
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/moveAuth?authSource=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      discovery:
        condition: service_healthy
    networks:
      - move-network

  # API Gateway (dernier à démarrer)
  api-gateway:
    build:
      context: .
      dockerfile: /apigateway/Dockerfile
    container_name: move-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      discovery:
        condition: service_healthy
      auth-service:
        condition: service_started
      content-service:
        condition: service_started
      search-service:
        condition: service_started
      community-service:
        condition: service_started
    networks:
      - move-network

networks:
  move-network:
    driver: bridge

volumes:
  mongodb_data:
  elasticsearch_data:
  rabbitmq_data:
  content_uploads: